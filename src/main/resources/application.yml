#server
server:
  port: 10000

#jdbc
spring:
  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521:XE
#    url: jdbc:oracle:thin:@18.208.113.216:1521:XE
    username: hr
    password: hr


  #jpa
  jpa:
    database-platform: org.hibernate.dialect.Oracle10gDialect
    hibernate:
      #jpa ddl-auto
      #create: DROP 후 CREATE
      #create-drop: DROP 후 CREATE 후 DROP, DML을 사용하지 않는 다면 DROP되지 않음
      #update: Entity와 DB 스키마 비교 후 수정 사항 반영(컬럼 추가)
      #validate: Entity와 DB 스키마 비교(다르면 예외 발생)
      ddl-auto: update

    #jpa format
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  #log
  output:
    ansi:
      enabled: always

  #Redis
  session:
    store-type: redis


# registration
# 네이버 API
#  security:
#    oauth2:
#      client:
#        registration:
#          naver:
#            client-id: LwN2FiWbr8qTUjRYPyjI
#            client-secret: tQQOlIUsof
#            scope:
#              - name
#              - email
#              - mobile
#            client-name: Naver
#            authorization-grant-type: authorization_code
#            redirect-uri: http://localhost:10000/login/oauth2/code/naver
#
#        provider:
#          naver:
#            authorization-uri: https://nid.naver.com/oauth2.0/authorize
#            token-uri: https://nid.naver.com/oauth2.0/token
#            user-info-uri: https://openapi.naver.com/v1/nid/me
#            user-name-attribute: response # 회원정보를 json으로 받는데 response라는 키값으로 네이버가 return해줌.(value에는 getAttributes()한 값들이 들어가있음)
